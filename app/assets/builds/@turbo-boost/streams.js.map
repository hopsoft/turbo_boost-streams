{
  "version": 3,
  "sources": ["../../../javascript/version.js", "../../../javascript/morph.js", "../../../javascript/invoke.js", "../../../javascript/index.js"],
  "sourcesContent": ["export default '0.1.8'\n", "import alpine from 'alpinejs'\nimport alpineMorph from '@alpinejs/morph'\n\nalpine.plugin(alpineMorph)\n\nconst input = /INPUT/i\nconst inputTypes = /date|datetime-local|email|month|number|password|range|search|tel|text|time|url|week/i\nconst textarea = /TEXTAREA/i\n\nfunction updating(el, toEl, childrenOnly, skip) {\n  if (el.nodeType !== Node.ELEMENT_NODE) return\n  if (el !== document.activeElement) return\n\n  const protect =\n    el.tagName.match(textarea) || (el.tagName.match(input) && el.getAttribute('type').match(inputTypes))\n\n  if (protect) return skip()\n}\n\nexport default function morph(element, html) {\n  alpine.morph(element, html, { updating })\n}\n", "import morph from './morph'\n\nexport const invokeEvents = {\n  before: 'turbo-boost:stream:before-invoke',\n  after: 'turbo-boost:stream:after-invoke',\n  finish: 'turbo-boost:stream:finish-invoke'\n}\n\n// Invokes the callback on a single receiver with before/after events\nfunction withInvokeEvents(receiver, detail, callback) {\n  const { object, target } = receiver\n  detail = detail || {}\n  detail = { ...detail, object: receiver.object }\n  const options = { detail, bubbles: true }\n\n  target.dispatchEvent(new CustomEvent(invokeEvents.before, options))\n\n  // the before event can provide invoke instructions my modifying the event detail\n  // For example, { delay: 1000 } will delay the invocation by 1000ms\n  let { delay } = detail.invoke || {}\n  delay = delay || 0\n\n  const execute = () => {\n    const result = callback(object)\n    options.detail.result = result\n    target.dispatchEvent(new CustomEvent(invokeEvents.after, options))\n\n    let promise\n    if (result instanceof Animation) promise = result.finished\n    if (result instanceof Promise) promise = result\n\n    if (promise)\n      promise.then(\n        () => {\n          options.detail.promise = 'fulfilled'\n          target.dispatchEvent(new CustomEvent(invokeEvents.finish, options))\n        },\n        () => {\n          options.detail.promise = 'rejected'\n          target.dispatchEvent(new CustomEvent(invokeEvents.finish, options))\n        }\n      )\n    else target.dispatchEvent(new CustomEvent(invokeEvents.finish, options))\n  }\n\n  if (delay > 0) setTimeout(execute, delay)\n  else execute()\n}\n\nfunction invokeDispatchEvent(method, args, receivers) {\n  const eventName = args[0]\n  const eventOptions = args[1]\n  const detail = { method, eventName, eventOptions }\n  receivers.forEach(receiver =>\n    withInvokeEvents(receiver, detail, object =>\n      object.dispatchEvent(new CustomEvent(eventName, eventOptions))\n    )\n  )\n}\n\nfunction invokeMorph(method, args, receivers) {\n  const html = args[0]\n  const detail = { method, html }\n  receivers.forEach(receiver => withInvokeEvents(receiver, detail, object => morph(object, html)))\n}\n\nfunction invokeAssignment(method, args, receivers) {\n  const property = method.slice(0, -1).trim()\n  const value = args[0]\n  const detail = { method, property, value }\n  receivers.forEach(receiver => withInvokeEvents(receiver, detail, object => (object[property] = value)))\n}\n\nfunction invokeMethod(method, args, receivers) {\n  const detail = { method, args }\n  receivers.forEach(receiver =>\n    withInvokeEvents(receiver, detail, object => object[method].apply(object, args))\n  )\n}\n\n// Performs an invocation on all receivers for the given method and args\nfunction performInvoke(method, args, receivers) {\n  // dispatch ................................................................................................\n  if (method.match(/^dispatch(Event)?$/)) return invokeDispatchEvent(method, args, receivers)\n\n  // morph ...................................................................................................\n  if (method.match(/^morph|mutate$/)) return invokeMorph(method, args, receivers)\n\n  // assignment ..............................................................................................\n  if (method.endsWith('=')) return invokeAssignment(method, args, receivers)\n\n  // method ..................................................................................................\n  return invokeMethod(method, args, receivers)\n}\n\nexport function invoke() {\n  const payload = JSON.parse(this.templateContent.textContent)\n  const { id, selector, receiver, method, args, delay } = payload\n  let receivers = [{ object: self, target: self }]\n  if (selector)\n    receivers = Array.from(document.querySelectorAll(selector)).map(el => ({\n      object: el,\n      target: el\n    }))\n\n  if (receiver) {\n    receivers = receivers.map(r => {\n      let { object, target } = r\n      const chain = receiver.split('.')\n      while (chain.length > 0) {\n        object = object[chain.shift()]\n        if (object.dispatchEvent) target = object\n      }\n      return { object, target }\n    })\n  }\n\n  if (delay > 0) setTimeout(() => performInvoke(method, args, receivers), delay)\n  else performInvoke(method, args, receivers)\n}\n", "import VERSION from './version'\nimport { invoke, invokeEvents } from './invoke'\n\nif (!self['Turbo'])\n  throw new Error(\n    '`Turbo` is not defined! Be sure to import `@turbo-boost/streams` after `@hotwired/turbo` or `@hotwired/turbo-rails`.'\n  )\n\nif (!Turbo['StreamActions'])\n  throw new Error(\n    '`Turbo.StreamActions` is not defined! Verify that you are running >= `7.2.0` of `@hotwired/turbo`.'\n  )\n\nTurbo.StreamActions.invoke = invoke\nself.TurboBoost = self.TurboBoost || {}\nself.TurboBoost.Streams = { invoke, invokeEvents, VERSION }\n\nconsole.info('@turbo-boost/streams has initialized and registered new stream actions with Turbo.')\n\nexport default self.TurboBoost.Streams\n"],
  "mappings": "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",
  "names": ["version_default", "alpine", "alpineMorph", "input", "inputTypes", "textarea", "updating", "el", "toEl", "childrenOnly", "skip", "morph", "element", "html", "invokeEvents", "withInvokeEvents", "receiver", "detail", "callback", "object", "target", "__spreadProps", "__spreadValues", "options", "delay", "execute", "result", "promise", "invokeDispatchEvent", "method", "args", "receivers", "eventName", "eventOptions", "invokeMorph", "html", "morph", "invokeAssignment", "property", "value", "invokeMethod", "performInvoke", "invoke", "payload", "id", "selector", "el", "r", "chain", "invoke", "invokeEvents", "version_default", "javascript_default"]
}
